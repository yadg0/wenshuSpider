<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.jd.spider.wenshu.dao.IArticleDao">
	<sql id="COMMON-SQL">
		<where>
				<if test="id !=null and id !=''"> AND id = #{id}</if>
				<if test="docId !=null and docId !=''"> AND doc_id = #{docId}</if>
				<if test="title !=null and title !=''"> AND title = #{title}</if>
				<if test="data !=null and data !=''"> AND data = #{data}</if>
				<if test="state !=null "> AND state = #{state}</if>
				<if test="createdUser !=null and createdUser !=''"> AND created_user = #{createdUser}</if>
				<if test="createdTime !=null and createdTime !=''"> AND created_time = #{createdTime}</if>
				<if test="updatedUser !=null and updatedUser !=''"> AND updated_user = #{updatedUser}</if>
				<if test="updatedTime !=null and updatedTime !=''"> AND updated_time = #{updatedTime}</if>
				<if test="yn !=null and yn !=''"> AND yn = #{yn}</if>
				<if test="taskId !=null and taskId !=''"> AND task_id = #{taskId}</if>
				<if test="taskStartDate !=null and taskStartDate !=''"> AND task_start_date = #{taskStartDate}</if>
				<if test="decodeData !=null and decodeData !=''"> AND decode_data = #{decodeData}</if>
		</where>
	</sql>
	<sql id="COMMON-SQL-ALIAS">
		<where>
				<if test="id !=null and id !=''"> AND a.id = #{id}</if>
				<if test="docId !=null and docId !=''"> AND a.doc_id = #{docId}</if>
				<if test="title !=null and title !=''"> AND a.title = #{title}</if>
				<if test="data !=null and data !=''"> AND a.data = #{data}</if>
				<if test="state !=null "> AND a.state = #{state}</if>
				<if test="createdUser !=null and createdUser !=''"> AND a.created_user = #{createdUser}</if>
				<if test="createdTime !=null and createdTime !=''"> AND a.created_time = #{createdTime}</if>
				<if test="updatedUser !=null and updatedUser !=''"> AND a.updated_user = #{updatedUser}</if>
				<if test="updatedTime !=null and updatedTime !=''"> AND a.updated_time = #{updatedTime}</if>
				<if test="yn !=null "> AND a.yn = #{yn}</if>
				<if test="taskId !=null and taskId !=''"> AND a.task_id = #{taskId}</if>
				<if test="taskStartDate !=null and taskStartDate !=''"> AND a.task_start_date = #{taskStartDate}</if>
				<if test="decodeData !=null and decodeData !=''"> AND a.decode_data = #{decodeData}</if>
		</where>
	</sql>
	<sql id="ORDER-SQL">
		<if test="orderBy != null and orderBy != ''"><![CDATA[ORDER BY ${orderBy}]]></if>
	</sql>
	<sql id="All-FIELDS">
		id AS id,doc_id AS docId,title AS title,data AS data,state AS state,created_user AS createdUser,created_time AS createdTime,updated_user AS updatedUser,updated_time AS updatedTime,yn AS yn,task_id as taskId,task_start_date as taskStartDate,decode_data as decodeData
	</sql>
	<sql id="All-FIELDS-ALIAS">
		a.id AS id,a.doc_id AS docId,a.title AS title,a.data AS data,a.state AS state,a.created_user AS createdUser,a.created_time AS createdTime,a.updated_user AS updatedUser,a.updated_time AS updatedTime,a.yn AS yn,a.task_id as taskId,a.task_start_date as taskStartDate,a.decode_data as decodeData
	</sql>
	<!--获取数据 -->
	<select id="getArticleById" resultType="article" parameterType="article">
		select
		<include refid="All-FIELDS" />
		FROM article${tableSub} WHERE ID = #{id}
	</select>

	<!--插入数据 -->
	<insert id="addArticle" parameterType="article">
		insert into article${tableSub}
		(
		id,doc_id,title,data,state,created_user,created_time,updated_user,updated_time,yn,task_id,task_start_date,decode_data
		)values(
		#{id},#{docId},#{title},#{data},#{state},#{createdUser},#{createdTime},#{updatedUser},#{updatedTime},#{yn},#{taskId},#{taskStartDate},#{decodeData}
		)
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			select last_insert_id() as ID from dual
		</selectKey>
	</insert>
	<!--插入解释后的数据 -->
	<insert id="addArticleDecode" parameterType="article">
		insert into article${tableSub}_decode
		(
		id,doc_id,title,data,state,created_user,created_time,updated_user,updated_time,yn,task_id,task_start_date,decode_data
		)values(
		#{id},#{docId},#{title},#{data},#{state},#{createdUser},#{createdTime},#{updatedUser},#{updatedTime},#{yn},#{taskId},#{taskStartDate},#{decodeData}
		)
		<selectKey resultType="java.lang.Long" keyProperty="id"
			order="AFTER">
			select last_insert_id() as ID from dual
		</selectKey>
	</insert>
	<!--更新数据 -->
	<update id="updateArticle" parameterType="article">
		update article${tableSub}
		<set>
				<if test="title !=null"> title = #{title},</if>
				<if test="data !=null"> data = #{data},</if>
				<if test="state !=null"> state = #{state},</if>
				<if test="createdUser !=null"> created_user = #{createdUser},</if>
				<if test="createdTime !=null"> created_time = #{createdTime},</if>
				<if test="updatedUser !=null"> updated_user = #{updatedUser},</if>
				<if test="updatedTime !=null"> updated_time = #{updatedTime},</if>
				<if test="yn !=null"> yn = #{yn},</if>
				<if test="taskId !=null"> task_id = #{taskId},</if>
				<if test="taskStartDate !=null"> task_start_date = #{taskStartDate},</if>
				<if test="decodeData !=null"> decode_data = #{decodeData},</if>
		</set>
		where doc_id = #{docId}
	</update>

	<!--删除数据 -->
	<update id="deleteArticleById" parameterType="article">
		update article${tableSub} set yn=0 ,
		 updated_time=#{updatedTime} ,
		 updated_user=#{updatedUser}
		where id = #{id} 
	</update>

	<!--分页查询 -->
	<select id="getArticleByPage" resultType="article"
		parameterType="java.util.HashMap">
		select
		<include refid="All-FIELDS" />
		from article${tableSub}
		<include refid="COMMON-SQL" />
		<include refid="ORDER-SQL" />
		limit #{startIndex},#{pageSize}
	</select>
	
	<select id="count" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		<![CDATA[
			SELECT COUNT(1) FROM article${tableSub}
		]]>
		<include refid="COMMON-SQL" />
	</select>
	<!--通用查询 -->
	<select id="getArticle" resultType="article"
		parameterType="article">
		select
		<include refid="All-FIELDS" />
		from article${tableSub}
		<where>
				<if test="docId !=null and docId !=''"> AND doc_id = #{docId}</if>
				<if test="state !=null "> AND state = #{state}</if>
				<if test="yn !=null and yn !=''"> AND yn = #{yn}</if>
				<if test="taskId !=null and taskId !=''"> AND task_id = #{taskId}</if>
		</where>
		<include refid="ORDER-SQL" />
		<if test="startIndex != null and pageSize != ''"><![CDATA[limit #{startIndex},#{pageSize}]]></if>
	</select>
	<!--通用查询 -->
	<select id="getAllArticle" resultType="article"
		parameterType="java.util.HashMap">
		select
		<include refid="All-FIELDS" />
		from article${tableSub}
		<include refid="ORDER-SQL" />
	</select>
	
	
	<!--批量更新数据 -->
	<update id="batchUpdateState" parameterType="article">
		update article${tableSub}
		<set>
				<if test="title !=null"> title = #{title},</if>
				<if test="data !=null"> data = #{data},</if>
				<if test="state !=null"> state = #{state},</if>
				<if test="createdUser !=null"> created_user = #{createdUser},</if>
				<if test="createdTime !=null"> created_time = #{createdTime},</if>
				<if test="updatedUser !=null"> updated_user = #{updatedUser},</if>
				<if test="updatedTime !=null"> updated_time = #{updatedTime},</if>
				<if test="yn !=null"> yn = #{yn},</if>
				<if test="taskId !=null"> task_id = #{taskId},</if>
				<if test="taskStartDate !=null"> task_start_date = #{taskStartDate},</if>
				<if test="decodeData !=null"> decode_data = #{decodeData},</if>
		</set>
		WHERE id in
		<foreach collection="ids" item="item" index="index" open="("
			close=")" separator=",">
			#{item}
		</foreach>
	</update>
	
	<!--更新失败的文章状态，用于重试 -->
	<update id="updateFailedArticle" parameterType="article">
		update article${tableSub} set state=0 ,
		 updated_time=#{updatedTime} ,
		 updated_user=#{updatedUser}
		where state!=7 and state!=2
	</update>
	
	<update id="updateFailArticleToNew" parameterType="article">
		update article${tableSub} set state=0 ,
		 updated_time=#{updatedTime} ,
		 updated_user=#{updatedUser}
		where state!=7 and state!=2
	</update>
</mapper>